#ifndef _NL80211_ENUMS_H
#define _NL80211_ENUMS_H

#include <linux/nl80211.h>
#include <linux/version.h>

#include <string_view>

inline std::string_view nl80211_attr_string(nl80211_attrs attr)
{
	switch (attr) {
		case NL80211_ATTR_UNSPEC: return "NL80211_ATTR_UNSPEC";

		case NL80211_ATTR_WIPHY: return "NL80211_ATTR_WIPHY";
		case NL80211_ATTR_WIPHY_NAME: return "NL80211_ATTR_WIPHY_NAME";

		case NL80211_ATTR_IFINDEX: return "NL80211_ATTR_IFINDEX";
		case NL80211_ATTR_IFNAME: return "NL80211_ATTR_IFNAME";
		case NL80211_ATTR_IFTYPE: return "NL80211_ATTR_IFTYPE";

		case NL80211_ATTR_MAC: return "NL80211_ATTR_MAC";

		case NL80211_ATTR_KEY_DATA: return "NL80211_ATTR_KEY_DATA";
		case NL80211_ATTR_KEY_IDX: return "NL80211_ATTR_KEY_IDX";
		case NL80211_ATTR_KEY_CIPHER: return "NL80211_ATTR_KEY_CIPHER";
		case NL80211_ATTR_KEY_SEQ: return "NL80211_ATTR_KEY_SEQ";
		case NL80211_ATTR_KEY_DEFAULT: return "NL80211_ATTR_KEY_DEFAULT";

		case NL80211_ATTR_BEACON_INTERVAL: return "NL80211_ATTR_BEACON_INTERVAL";
		case NL80211_ATTR_DTIM_PERIOD: return "NL80211_ATTR_DTIM_PERIOD";
		case NL80211_ATTR_BEACON_HEAD: return "NL80211_ATTR_BEACON_HEAD";
		case NL80211_ATTR_BEACON_TAIL: return "NL80211_ATTR_BEACON_TAIL";

		case NL80211_ATTR_STA_AID: return "NL80211_ATTR_STA_AID";
		case NL80211_ATTR_STA_FLAGS: return "NL80211_ATTR_STA_FLAGS";
		case NL80211_ATTR_STA_LISTEN_INTERVAL: return "NL80211_ATTR_STA_LISTEN_INTERVAL";
		case NL80211_ATTR_STA_SUPPORTED_RATES: return "NL80211_ATTR_STA_SUPPORTED_RATES";
		case NL80211_ATTR_STA_VLAN: return "NL80211_ATTR_STA_VLAN";
		case NL80211_ATTR_STA_INFO: return "NL80211_ATTR_STA_INFO";

		case NL80211_ATTR_WIPHY_BANDS: return "NL80211_ATTR_WIPHY_BANDS";

		case NL80211_ATTR_MNTR_FLAGS: return "NL80211_ATTR_MNTR_FLAGS";

		case NL80211_ATTR_MESH_ID: return "NL80211_ATTR_MESH_ID";
		case NL80211_ATTR_STA_PLINK_ACTION: return "NL80211_ATTR_STA_PLINK_ACTION";
		case NL80211_ATTR_MPATH_NEXT_HOP: return "NL80211_ATTR_MPATH_NEXT_HOP";
		case NL80211_ATTR_MPATH_INFO: return "NL80211_ATTR_MPATH_INFO";

		case NL80211_ATTR_BSS_CTS_PROT: return "NL80211_ATTR_BSS_CTS_PROT";
		case NL80211_ATTR_BSS_SHORT_PREAMBLE: return "NL80211_ATTR_BSS_SHORT_PREAMBLE";
		case NL80211_ATTR_BSS_SHORT_SLOT_TIME: return "NL80211_ATTR_BSS_SHORT_SLOT_TIME";

		case NL80211_ATTR_HT_CAPABILITY: return "NL80211_ATTR_HT_CAPABILITY";

		case NL80211_ATTR_SUPPORTED_IFTYPES: return "NL80211_ATTR_SUPPORTED_IFTYPES";

		case NL80211_ATTR_REG_ALPHA2: return "NL80211_ATTR_REG_ALPHA2";
		case NL80211_ATTR_REG_RULES: return "NL80211_ATTR_REG_RULES";

		case NL80211_ATTR_MESH_CONFIG: return "NL80211_ATTR_MESH_CONFIG";

		case NL80211_ATTR_BSS_BASIC_RATES: return "NL80211_ATTR_BSS_BASIC_RATES";

		case NL80211_ATTR_WIPHY_TXQ_PARAMS: return "NL80211_ATTR_WIPHY_TXQ_PARAMS";
		case NL80211_ATTR_WIPHY_FREQ: return "NL80211_ATTR_WIPHY_FREQ";
		case NL80211_ATTR_WIPHY_CHANNEL_TYPE: return "NL80211_ATTR_WIPHY_CHANNEL_TYPE";

		case NL80211_ATTR_KEY_DEFAULT_MGMT: return "NL80211_ATTR_KEY_DEFAULT_MGMT";

		case NL80211_ATTR_MGMT_SUBTYPE: return "NL80211_ATTR_MGMT_SUBTYPE";
		case NL80211_ATTR_IE: return "NL80211_ATTR_IE";

		case NL80211_ATTR_MAX_NUM_SCAN_SSIDS: return "NL80211_ATTR_MAX_NUM_SCAN_SSIDS";

		case NL80211_ATTR_SCAN_FREQUENCIES: return "NL80211_ATTR_SCAN_FREQUENCIES";
		case NL80211_ATTR_SCAN_SSIDS: return "NL80211_ATTR_SCAN_SSIDS";
		case NL80211_ATTR_GENERATION: return "NL80211_ATTR_GENERATION"; /* replaces old SCAN_GENERATION */
		case NL80211_ATTR_BSS: return "NL80211_ATTR_BSS";

		case NL80211_ATTR_REG_INITIATOR: return "NL80211_ATTR_REG_INITIATOR";
		case NL80211_ATTR_REG_TYPE: return "NL80211_ATTR_REG_TYPE";

		case NL80211_ATTR_SUPPORTED_COMMANDS: return "NL80211_ATTR_SUPPORTED_COMMANDS";

		case NL80211_ATTR_FRAME: return "NL80211_ATTR_FRAME";
		case NL80211_ATTR_SSID: return "NL80211_ATTR_SSID";
		case NL80211_ATTR_AUTH_TYPE: return "NL80211_ATTR_AUTH_TYPE";
		case NL80211_ATTR_REASON_CODE: return "NL80211_ATTR_REASON_CODE";

		case NL80211_ATTR_KEY_TYPE: return "NL80211_ATTR_KEY_TYPE";

		case NL80211_ATTR_MAX_SCAN_IE_LEN: return "NL80211_ATTR_MAX_SCAN_IE_LEN";
		case NL80211_ATTR_CIPHER_SUITES: return "NL80211_ATTR_CIPHER_SUITES";

		case NL80211_ATTR_FREQ_BEFORE: return "NL80211_ATTR_FREQ_BEFORE";
		case NL80211_ATTR_FREQ_AFTER: return "NL80211_ATTR_FREQ_AFTER";

		case NL80211_ATTR_FREQ_FIXED: return "NL80211_ATTR_FREQ_FIXED";


		case NL80211_ATTR_WIPHY_RETRY_SHORT: return "NL80211_ATTR_WIPHY_RETRY_SHORT";
		case NL80211_ATTR_WIPHY_RETRY_LONG: return "NL80211_ATTR_WIPHY_RETRY_LONG";
		case NL80211_ATTR_WIPHY_FRAG_THRESHOLD: return "NL80211_ATTR_WIPHY_FRAG_THRESHOLD";
		case NL80211_ATTR_WIPHY_RTS_THRESHOLD: return "NL80211_ATTR_WIPHY_RTS_THRESHOLD";

		case NL80211_ATTR_TIMED_OUT: return "NL80211_ATTR_TIMED_OUT";

		case NL80211_ATTR_USE_MFP: return "NL80211_ATTR_USE_MFP";

		case NL80211_ATTR_STA_FLAGS2: return "NL80211_ATTR_STA_FLAGS2";

		case NL80211_ATTR_CONTROL_PORT: return "NL80211_ATTR_CONTROL_PORT";

		case NL80211_ATTR_TESTDATA: return "NL80211_ATTR_TESTDATA";

		case NL80211_ATTR_PRIVACY: return "NL80211_ATTR_PRIVACY";

		case NL80211_ATTR_DISCONNECTED_BY_AP: return "NL80211_ATTR_DISCONNECTED_BY_AP";
		case NL80211_ATTR_STATUS_CODE: return "NL80211_ATTR_STATUS_CODE";

		case NL80211_ATTR_CIPHER_SUITES_PAIRWISE: return "NL80211_ATTR_CIPHER_SUITES_PAIRWISE";
		case NL80211_ATTR_CIPHER_SUITE_GROUP: return "NL80211_ATTR_CIPHER_SUITE_GROUP";
		case NL80211_ATTR_WPA_VERSIONS: return "NL80211_ATTR_WPA_VERSIONS";
		case NL80211_ATTR_AKM_SUITES: return "NL80211_ATTR_AKM_SUITES";

		case NL80211_ATTR_REQ_IE: return "NL80211_ATTR_REQ_IE";
		case NL80211_ATTR_RESP_IE: return "NL80211_ATTR_RESP_IE";

		case NL80211_ATTR_PREV_BSSID: return "NL80211_ATTR_PREV_BSSID";

		case NL80211_ATTR_KEY: return "NL80211_ATTR_KEY";
		case NL80211_ATTR_KEYS: return "NL80211_ATTR_KEYS";

		case NL80211_ATTR_PID: return "NL80211_ATTR_PID";

		case NL80211_ATTR_4ADDR: return "NL80211_ATTR_4ADDR";

		case NL80211_ATTR_SURVEY_INFO: return "NL80211_ATTR_SURVEY_INFO";

		case NL80211_ATTR_PMKID: return "NL80211_ATTR_PMKID";
		case NL80211_ATTR_MAX_NUM_PMKIDS: return "NL80211_ATTR_MAX_NUM_PMKIDS";

		case NL80211_ATTR_DURATION: return "NL80211_ATTR_DURATION";

		case NL80211_ATTR_COOKIE: return "NL80211_ATTR_COOKIE";

		case NL80211_ATTR_WIPHY_COVERAGE_CLASS: return "NL80211_ATTR_WIPHY_COVERAGE_CLASS";

		case NL80211_ATTR_TX_RATES: return "NL80211_ATTR_TX_RATES";

		case NL80211_ATTR_FRAME_MATCH: return "NL80211_ATTR_FRAME_MATCH";

		case NL80211_ATTR_ACK: return "NL80211_ATTR_ACK";

		case NL80211_ATTR_PS_STATE: return "NL80211_ATTR_PS_STATE";

		case NL80211_ATTR_CQM: return "NL80211_ATTR_CQM";

		case NL80211_ATTR_LOCAL_STATE_CHANGE: return "NL80211_ATTR_LOCAL_STATE_CHANGE";

		case NL80211_ATTR_AP_ISOLATE: return "NL80211_ATTR_AP_ISOLATE";

		case NL80211_ATTR_WIPHY_TX_POWER_SETTING: return "NL80211_ATTR_WIPHY_TX_POWER_SETTING";
		case NL80211_ATTR_WIPHY_TX_POWER_LEVEL: return "NL80211_ATTR_WIPHY_TX_POWER_LEVEL";

		case NL80211_ATTR_TX_FRAME_TYPES: return "NL80211_ATTR_TX_FRAME_TYPES";
		case NL80211_ATTR_RX_FRAME_TYPES: return "NL80211_ATTR_RX_FRAME_TYPES";
		case NL80211_ATTR_FRAME_TYPE: return "NL80211_ATTR_FRAME_TYPE";

		case NL80211_ATTR_CONTROL_PORT_ETHERTYPE: return "NL80211_ATTR_CONTROL_PORT_ETHERTYPE";
		case NL80211_ATTR_CONTROL_PORT_NO_ENCRYPT: return "NL80211_ATTR_CONTROL_PORT_NO_ENCRYPT";

		case NL80211_ATTR_SUPPORT_IBSS_RSN: return "NL80211_ATTR_SUPPORT_IBSS_RSN";

		case NL80211_ATTR_WIPHY_ANTENNA_TX: return "NL80211_ATTR_WIPHY_ANTENNA_TX";
		case NL80211_ATTR_WIPHY_ANTENNA_RX: return "NL80211_ATTR_WIPHY_ANTENNA_RX";

		case NL80211_ATTR_MCAST_RATE: return "NL80211_ATTR_MCAST_RATE";

		case NL80211_ATTR_OFFCHANNEL_TX_OK: return "NL80211_ATTR_OFFCHANNEL_TX_OK";

		case NL80211_ATTR_BSS_HT_OPMODE: return "NL80211_ATTR_BSS_HT_OPMODE";

		case NL80211_ATTR_KEY_DEFAULT_TYPES: return "NL80211_ATTR_KEY_DEFAULT_TYPES";

		case NL80211_ATTR_MAX_REMAIN_ON_CHANNEL_DURATION: return "NL80211_ATTR_MAX_REMAIN_ON_CHANNEL_DURATION";

		case NL80211_ATTR_MESH_SETUP: return "NL80211_ATTR_MESH_SETUP";

		case NL80211_ATTR_WIPHY_ANTENNA_AVAIL_TX: return "NL80211_ATTR_WIPHY_ANTENNA_AVAIL_TX";
		case NL80211_ATTR_WIPHY_ANTENNA_AVAIL_RX: return "NL80211_ATTR_WIPHY_ANTENNA_AVAIL_RX";

		case NL80211_ATTR_SUPPORT_MESH_AUTH: return "NL80211_ATTR_SUPPORT_MESH_AUTH";
		case NL80211_ATTR_STA_PLINK_STATE: return "NL80211_ATTR_STA_PLINK_STATE";

		case NL80211_ATTR_WOWLAN_TRIGGERS: return "NL80211_ATTR_WOWLAN_TRIGGERS";
		case NL80211_ATTR_WOWLAN_TRIGGERS_SUPPORTED: return "NL80211_ATTR_WOWLAN_TRIGGERS_SUPPORTED";

		case NL80211_ATTR_SCHED_SCAN_INTERVAL: return "NL80211_ATTR_SCHED_SCAN_INTERVAL";

		case NL80211_ATTR_INTERFACE_COMBINATIONS: return "NL80211_ATTR_INTERFACE_COMBINATIONS";
		case NL80211_ATTR_SOFTWARE_IFTYPES: return "NL80211_ATTR_SOFTWARE_IFTYPES";

		case NL80211_ATTR_REKEY_DATA: return "NL80211_ATTR_REKEY_DATA";

		case NL80211_ATTR_MAX_NUM_SCHED_SCAN_SSIDS: return "NL80211_ATTR_MAX_NUM_SCHED_SCAN_SSIDS";
		case NL80211_ATTR_MAX_SCHED_SCAN_IE_LEN: return "NL80211_ATTR_MAX_SCHED_SCAN_IE_LEN";

		case NL80211_ATTR_SCAN_SUPP_RATES: return "NL80211_ATTR_SCAN_SUPP_RATES";

		case NL80211_ATTR_HIDDEN_SSID: return "NL80211_ATTR_HIDDEN_SSID";

		case NL80211_ATTR_IE_PROBE_RESP: return "NL80211_ATTR_IE_PROBE_RESP";
		case NL80211_ATTR_IE_ASSOC_RESP: return "NL80211_ATTR_IE_ASSOC_RESP";

		case NL80211_ATTR_STA_WME: return "NL80211_ATTR_STA_WME";
		case NL80211_ATTR_SUPPORT_AP_UAPSD: return "NL80211_ATTR_SUPPORT_AP_UAPSD";

		case NL80211_ATTR_ROAM_SUPPORT: return "NL80211_ATTR_ROAM_SUPPORT";

		case NL80211_ATTR_SCHED_SCAN_MATCH: return "NL80211_ATTR_SCHED_SCAN_MATCH";
		case NL80211_ATTR_MAX_MATCH_SETS: return "NL80211_ATTR_MAX_MATCH_SETS";

		case NL80211_ATTR_PMKSA_CANDIDATE: return "NL80211_ATTR_PMKSA_CANDIDATE";

		case NL80211_ATTR_TX_NO_CCK_RATE: return "NL80211_ATTR_TX_NO_CCK_RATE";

		case NL80211_ATTR_TDLS_ACTION: return "NL80211_ATTR_TDLS_ACTION";
		case NL80211_ATTR_TDLS_DIALOG_TOKEN: return "NL80211_ATTR_TDLS_DIALOG_TOKEN";
		case NL80211_ATTR_TDLS_OPERATION: return "NL80211_ATTR_TDLS_OPERATION";
		case NL80211_ATTR_TDLS_SUPPORT: return "NL80211_ATTR_TDLS_SUPPORT";
		case NL80211_ATTR_TDLS_EXTERNAL_SETUP: return "NL80211_ATTR_TDLS_EXTERNAL_SETUP";

		case NL80211_ATTR_DEVICE_AP_SME: return "NL80211_ATTR_DEVICE_AP_SME";

		case NL80211_ATTR_DONT_WAIT_FOR_ACK: return "NL80211_ATTR_DONT_WAIT_FOR_ACK";

		case NL80211_ATTR_FEATURE_FLAGS: return "NL80211_ATTR_FEATURE_FLAGS";

		case NL80211_ATTR_PROBE_RESP_OFFLOAD: return "NL80211_ATTR_PROBE_RESP_OFFLOAD";

		case NL80211_ATTR_PROBE_RESP: return "NL80211_ATTR_PROBE_RESP";

		case NL80211_ATTR_DFS_REGION: return "NL80211_ATTR_DFS_REGION";

		case NL80211_ATTR_DISABLE_HT: return "NL80211_ATTR_DISABLE_HT";
		case NL80211_ATTR_HT_CAPABILITY_MASK: return "NL80211_ATTR_HT_CAPABILITY_MASK";

		case NL80211_ATTR_NOACK_MAP: return "NL80211_ATTR_NOACK_MAP";

		case NL80211_ATTR_INACTIVITY_TIMEOUT: return "NL80211_ATTR_INACTIVITY_TIMEOUT";

		case NL80211_ATTR_RX_SIGNAL_DBM: return "NL80211_ATTR_RX_SIGNAL_DBM";

		case NL80211_ATTR_BG_SCAN_PERIOD: return "NL80211_ATTR_BG_SCAN_PERIOD";

		case NL80211_ATTR_WDEV: return "NL80211_ATTR_WDEV";

		case NL80211_ATTR_USER_REG_HINT_TYPE: return "NL80211_ATTR_USER_REG_HINT_TYPE";

		case NL80211_ATTR_CONN_FAILED_REASON: return "NL80211_ATTR_CONN_FAILED_REASON";

		case NL80211_ATTR_AUTH_DATA: return "NL80211_ATTR_AUTH_DATA";

		case NL80211_ATTR_VHT_CAPABILITY: return "NL80211_ATTR_VHT_CAPABILITY";

		case NL80211_ATTR_SCAN_FLAGS: return "NL80211_ATTR_SCAN_FLAGS";

		case NL80211_ATTR_CHANNEL_WIDTH: return "NL80211_ATTR_CHANNEL_WIDTH";
		case NL80211_ATTR_CENTER_FREQ1: return "NL80211_ATTR_CENTER_FREQ1";
		case NL80211_ATTR_CENTER_FREQ2: return "NL80211_ATTR_CENTER_FREQ2";

		case NL80211_ATTR_P2P_CTWINDOW: return "NL80211_ATTR_P2P_CTWINDOW";
		case NL80211_ATTR_P2P_OPPPS: return "NL80211_ATTR_P2P_OPPPS";

		case NL80211_ATTR_LOCAL_MESH_POWER_MODE: return "NL80211_ATTR_LOCAL_MESH_POWER_MODE";

		case NL80211_ATTR_ACL_POLICY: return "NL80211_ATTR_ACL_POLICY";

		case NL80211_ATTR_MAC_ADDRS: return "NL80211_ATTR_MAC_ADDRS";

		case NL80211_ATTR_MAC_ACL_MAX: return "NL80211_ATTR_MAC_ACL_MAX";

		case NL80211_ATTR_RADAR_EVENT: return "NL80211_ATTR_RADAR_EVENT";

		case NL80211_ATTR_EXT_CAPA: return "NL80211_ATTR_EXT_CAPA";
		case NL80211_ATTR_EXT_CAPA_MASK: return "NL80211_ATTR_EXT_CAPA_MASK";

		case NL80211_ATTR_STA_CAPABILITY: return "NL80211_ATTR_STA_CAPABILITY";
		case NL80211_ATTR_STA_EXT_CAPABILITY: return "NL80211_ATTR_STA_EXT_CAPABILITY";

		case NL80211_ATTR_PROTOCOL_FEATURES: return "NL80211_ATTR_PROTOCOL_FEATURES";
		case NL80211_ATTR_SPLIT_WIPHY_DUMP: return "NL80211_ATTR_SPLIT_WIPHY_DUMP";

		case NL80211_ATTR_DISABLE_VHT: return "NL80211_ATTR_DISABLE_VHT";
		case NL80211_ATTR_VHT_CAPABILITY_MASK: return "NL80211_ATTR_VHT_CAPABILITY_MASK";

		case NL80211_ATTR_MDID: return "NL80211_ATTR_MDID";
		case NL80211_ATTR_IE_RIC: return "NL80211_ATTR_IE_RIC";

		case NL80211_ATTR_CRIT_PROT_ID: return "NL80211_ATTR_CRIT_PROT_ID";
		case NL80211_ATTR_MAX_CRIT_PROT_DURATION: return "NL80211_ATTR_MAX_CRIT_PROT_DURATION";

		case NL80211_ATTR_PEER_AID: return "NL80211_ATTR_PEER_AID";

		case NL80211_ATTR_COALESCE_RULE: return "NL80211_ATTR_COALESCE_RULE";

		case NL80211_ATTR_CH_SWITCH_COUNT: return "NL80211_ATTR_CH_SWITCH_COUNT";
		case NL80211_ATTR_CH_SWITCH_BLOCK_TX: return "NL80211_ATTR_CH_SWITCH_BLOCK_TX";
		case NL80211_ATTR_CSA_IES: return "NL80211_ATTR_CSA_IES";
#if LINUX_VERSION_CODE >= KERNEL_VERSION(6, 5, 0)
		case NL80211_ATTR_CNTDWN_OFFS_BEACON: return "NL80211_ATTR_CNTDWN_OFFS_BEACON";
		case NL80211_ATTR_CNTDWN_OFFS_PRESP: return "NL80211_ATTR_CNTDWN_OFFS_PRESP";
#else
		case NL80211_ATTR_CSA_C_OFF_BEACON: return "NL80211_ATTR_CSA_C_OFF_BEACON";
		case NL80211_ATTR_CSA_C_OFF_PRESP: return "NL80211_ATTR_CSA_C_OFF_PRESP";
#endif

		case NL80211_ATTR_RXMGMT_FLAGS: return "NL80211_ATTR_RXMGMT_FLAGS";

		case NL80211_ATTR_STA_SUPPORTED_CHANNELS: return "NL80211_ATTR_STA_SUPPORTED_CHANNELS";

		case NL80211_ATTR_STA_SUPPORTED_OPER_CLASSES: return "NL80211_ATTR_STA_SUPPORTED_OPER_CLASSES";

		case NL80211_ATTR_HANDLE_DFS: return "NL80211_ATTR_HANDLE_DFS";

		case NL80211_ATTR_SUPPORT_5_MHZ: return "NL80211_ATTR_SUPPORT_5_MHZ";
		case NL80211_ATTR_SUPPORT_10_MHZ: return "NL80211_ATTR_SUPPORT_10_MHZ";

		case NL80211_ATTR_OPMODE_NOTIF: return "NL80211_ATTR_OPMODE_NOTIF";

		case NL80211_ATTR_VENDOR_ID: return "NL80211_ATTR_VENDOR_ID";
		case NL80211_ATTR_VENDOR_SUBCMD: return "NL80211_ATTR_VENDOR_SUBCMD";
		case NL80211_ATTR_VENDOR_DATA: return "NL80211_ATTR_VENDOR_DATA";
		case NL80211_ATTR_VENDOR_EVENTS: return "NL80211_ATTR_VENDOR_EVENTS";

		case NL80211_ATTR_QOS_MAP: return "NL80211_ATTR_QOS_MAP";

		case NL80211_ATTR_MAC_HINT: return "NL80211_ATTR_MAC_HINT";
		case NL80211_ATTR_WIPHY_FREQ_HINT: return "NL80211_ATTR_WIPHY_FREQ_HINT";

		case NL80211_ATTR_MAX_AP_ASSOC_STA: return "NL80211_ATTR_MAX_AP_ASSOC_STA";

		case NL80211_ATTR_TDLS_PEER_CAPABILITY: return "NL80211_ATTR_TDLS_PEER_CAPABILITY";

		case NL80211_ATTR_SOCKET_OWNER: return "NL80211_ATTR_SOCKET_OWNER";

		case NL80211_ATTR_CSA_C_OFFSETS_TX: return "NL80211_ATTR_CSA_C_OFFSETS_TX";
		case NL80211_ATTR_MAX_CSA_COUNTERS: return "NL80211_ATTR_MAX_CSA_COUNTERS";

		case NL80211_ATTR_TDLS_INITIATOR: return "NL80211_ATTR_TDLS_INITIATOR";

		case NL80211_ATTR_USE_RRM: return "NL80211_ATTR_USE_RRM";

		case NL80211_ATTR_WIPHY_DYN_ACK: return "NL80211_ATTR_WIPHY_DYN_ACK";

		case NL80211_ATTR_TSID: return "NL80211_ATTR_TSID";
		case NL80211_ATTR_USER_PRIO: return "NL80211_ATTR_USER_PRIO";
		case NL80211_ATTR_ADMITTED_TIME: return "NL80211_ATTR_ADMITTED_TIME";

		case NL80211_ATTR_SMPS_MODE: return "NL80211_ATTR_SMPS_MODE";

		case NL80211_ATTR_OPER_CLASS: return "NL80211_ATTR_OPER_CLASS";

		case NL80211_ATTR_MAC_MASK: return "NL80211_ATTR_MAC_MASK";

		case NL80211_ATTR_WIPHY_SELF_MANAGED_REG: return "NL80211_ATTR_WIPHY_SELF_MANAGED_REG";

		case NL80211_ATTR_EXT_FEATURES: return "NL80211_ATTR_EXT_FEATURES";

		case NL80211_ATTR_SURVEY_RADIO_STATS: return "NL80211_ATTR_SURVEY_RADIO_STATS";

		case NL80211_ATTR_NETNS_FD: return "NL80211_ATTR_NETNS_FD";

		case NL80211_ATTR_SCHED_SCAN_DELAY: return "NL80211_ATTR_SCHED_SCAN_DELAY";

		case NL80211_ATTR_REG_INDOOR: return "NL80211_ATTR_REG_INDOOR";

		case NL80211_ATTR_MAX_NUM_SCHED_SCAN_PLANS: return "NL80211_ATTR_MAX_NUM_SCHED_SCAN_PLANS";
		case NL80211_ATTR_MAX_SCAN_PLAN_INTERVAL: return "NL80211_ATTR_MAX_SCAN_PLAN_INTERVAL";
		case NL80211_ATTR_MAX_SCAN_PLAN_ITERATIONS: return "NL80211_ATTR_MAX_SCAN_PLAN_ITERATIONS";
		case NL80211_ATTR_SCHED_SCAN_PLANS: return "NL80211_ATTR_SCHED_SCAN_PLANS";

		case NL80211_ATTR_PBSS: return "NL80211_ATTR_PBSS";

		case NL80211_ATTR_BSS_SELECT: return "NL80211_ATTR_BSS_SELECT";

		case NL80211_ATTR_STA_SUPPORT_P2P_PS: return "NL80211_ATTR_STA_SUPPORT_P2P_PS";

		case NL80211_ATTR_PAD: return "NL80211_ATTR_PAD";

		case NL80211_ATTR_IFTYPE_EXT_CAPA: return "NL80211_ATTR_IFTYPE_EXT_CAPA";

		case NL80211_ATTR_MU_MIMO_GROUP_DATA: return "NL80211_ATTR_MU_MIMO_GROUP_DATA";
		case NL80211_ATTR_MU_MIMO_FOLLOW_MAC_ADDR: return "NL80211_ATTR_MU_MIMO_FOLLOW_MAC_ADDR";

		case NL80211_ATTR_SCAN_START_TIME_TSF: return "NL80211_ATTR_SCAN_START_TIME_TSF";
		case NL80211_ATTR_SCAN_START_TIME_TSF_BSSID: return "NL80211_ATTR_SCAN_START_TIME_TSF_BSSID";
		case NL80211_ATTR_MEASUREMENT_DURATION: return "NL80211_ATTR_MEASUREMENT_DURATION";
		case NL80211_ATTR_MEASUREMENT_DURATION_MANDATORY: return "NL80211_ATTR_MEASUREMENT_DURATION_MANDATORY";

		case NL80211_ATTR_MESH_PEER_AID: return "NL80211_ATTR_MESH_PEER_AID";

		case NL80211_ATTR_NAN_MASTER_PREF: return "NL80211_ATTR_NAN_MASTER_PREF";
		case NL80211_ATTR_BANDS: return "NL80211_ATTR_BANDS";
		case NL80211_ATTR_NAN_FUNC: return "NL80211_ATTR_NAN_FUNC";
		case NL80211_ATTR_NAN_MATCH: return "NL80211_ATTR_NAN_MATCH";

		case NL80211_ATTR_FILS_KEK: return "NL80211_ATTR_FILS_KEK";
		case NL80211_ATTR_FILS_NONCES: return "NL80211_ATTR_FILS_NONCES";

		case NL80211_ATTR_MULTICAST_TO_UNICAST_ENABLED: return "NL80211_ATTR_MULTICAST_TO_UNICAST_ENABLED";

		case NL80211_ATTR_BSSID: return "NL80211_ATTR_BSSID";

		case NL80211_ATTR_SCHED_SCAN_RELATIVE_RSSI: return "NL80211_ATTR_SCHED_SCAN_RELATIVE_RSSI";
		case NL80211_ATTR_SCHED_SCAN_RSSI_ADJUST: return "NL80211_ATTR_SCHED_SCAN_RSSI_ADJUST";

		case NL80211_ATTR_TIMEOUT_REASON: return "NL80211_ATTR_TIMEOUT_REASON";

		case NL80211_ATTR_FILS_ERP_USERNAME: return "NL80211_ATTR_FILS_ERP_USERNAME";
		case NL80211_ATTR_FILS_ERP_REALM: return "NL80211_ATTR_FILS_ERP_REALM";
		case NL80211_ATTR_FILS_ERP_NEXT_SEQ_NUM: return "NL80211_ATTR_FILS_ERP_NEXT_SEQ_NUM";
		case NL80211_ATTR_FILS_ERP_RRK: return "NL80211_ATTR_FILS_ERP_RRK";
		case NL80211_ATTR_FILS_CACHE_ID: return "NL80211_ATTR_FILS_CACHE_ID";

		case NL80211_ATTR_PMK: return "NL80211_ATTR_PMK";

		case NL80211_ATTR_SCHED_SCAN_MULTI: return "NL80211_ATTR_SCHED_SCAN_MULTI";
		case NL80211_ATTR_SCHED_SCAN_MAX_REQS: return "NL80211_ATTR_SCHED_SCAN_MAX_REQS";

		case NL80211_ATTR_WANT_1X_4WAY_HS: return "NL80211_ATTR_WANT_1X_4WAY_HS";
		case NL80211_ATTR_PMKR0_NAME: return "NL80211_ATTR_PMKR0_NAME";
		case NL80211_ATTR_PORT_AUTHORIZED: return "NL80211_ATTR_PORT_AUTHORIZED";

		case NL80211_ATTR_EXTERNAL_AUTH_ACTION: return "NL80211_ATTR_EXTERNAL_AUTH_ACTION";
		case NL80211_ATTR_EXTERNAL_AUTH_SUPPORT: return "NL80211_ATTR_EXTERNAL_AUTH_SUPPORT";

		case NL80211_ATTR_NSS: return "NL80211_ATTR_NSS";
		case NL80211_ATTR_ACK_SIGNAL: return "NL80211_ATTR_ACK_SIGNAL";

		case NL80211_ATTR_CONTROL_PORT_OVER_NL80211: return "NL80211_ATTR_CONTROL_PORT_OVER_NL80211";

		case NL80211_ATTR_TXQ_STATS: return "NL80211_ATTR_TXQ_STATS";
		case NL80211_ATTR_TXQ_LIMIT: return "NL80211_ATTR_TXQ_LIMIT";
		case NL80211_ATTR_TXQ_MEMORY_LIMIT: return "NL80211_ATTR_TXQ_MEMORY_LIMIT";
		case NL80211_ATTR_TXQ_QUANTUM: return "NL80211_ATTR_TXQ_QUANTUM";

		case NL80211_ATTR_HE_CAPABILITY: return "NL80211_ATTR_HE_CAPABILITY";

		case NL80211_ATTR_FTM_RESPONDER: return "NL80211_ATTR_FTM_RESPONDER";

		case NL80211_ATTR_FTM_RESPONDER_STATS: return "NL80211_ATTR_FTM_RESPONDER_STATS";

		case NL80211_ATTR_TIMEOUT: return "NL80211_ATTR_TIMEOUT";

		case NL80211_ATTR_PEER_MEASUREMENTS: return "NL80211_ATTR_PEER_MEASUREMENTS";

		case NL80211_ATTR_AIRTIME_WEIGHT: return "NL80211_ATTR_AIRTIME_WEIGHT";
		case NL80211_ATTR_STA_TX_POWER_SETTING: return "NL80211_ATTR_STA_TX_POWER_SETTING";
		case NL80211_ATTR_STA_TX_POWER: return "NL80211_ATTR_STA_TX_POWER";

		case NL80211_ATTR_SAE_PASSWORD: return "NL80211_ATTR_SAE_PASSWORD";

		case NL80211_ATTR_TWT_RESPONDER: return "NL80211_ATTR_TWT_RESPONDER";

		case NL80211_ATTR_HE_OBSS_PD: return "NL80211_ATTR_HE_OBSS_PD";

		case NL80211_ATTR_WIPHY_EDMG_CHANNELS: return "NL80211_ATTR_WIPHY_EDMG_CHANNELS";
		case NL80211_ATTR_WIPHY_EDMG_BW_CONFIG: return "NL80211_ATTR_WIPHY_EDMG_BW_CONFIG";

#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 15, 0)
		case NL80211_ATTR_VLAN_ID: return "NL80211_ATTR_VLAN_ID";
		case NL80211_ATTR_HE_BSS_COLOR: return "NL80211_ATTR_HE_BSS_COLOR";

		case NL80211_ATTR_IFTYPE_AKM_SUITES: return "NL80211_ATTR_IFTYPE_AKM_SUITES";

		case NL80211_ATTR_TID_CONFIG: return "NL80211_ATTR_TID_CONFIG";

		case NL80211_ATTR_CONTROL_PORT_NO_PREAUTH: return "NL80211_ATTR_CONTROL_PORT_NO_PREAUTH";

		case NL80211_ATTR_PMK_LIFETIME: return "NL80211_ATTR_PMK_LIFETIME";
		case NL80211_ATTR_PMK_REAUTH_THRESHOLD: return "NL80211_ATTR_PMK_REAUTH_THRESHOLD";

		case NL80211_ATTR_RECEIVE_MULTICAST: return "NL80211_ATTR_RECEIVE_MULTICAST";
		case NL80211_ATTR_WIPHY_FREQ_OFFSET: return "NL80211_ATTR_WIPHY_FREQ_OFFSET";
		case NL80211_ATTR_CENTER_FREQ1_OFFSET: return "NL80211_ATTR_CENTER_FREQ1_OFFSET";
		case NL80211_ATTR_SCAN_FREQ_KHZ: return "NL80211_ATTR_SCAN_FREQ_KHZ";

		case NL80211_ATTR_HE_6GHZ_CAPABILITY: return "NL80211_ATTR_HE_6GHZ_CAPABILITY";

		case NL80211_ATTR_FILS_DISCOVERY: return "NL80211_ATTR_FILS_DISCOVERY";

		case NL80211_ATTR_UNSOL_BCAST_PROBE_RESP: return "NL80211_ATTR_UNSOL_BCAST_PROBE_RESP";

		case NL80211_ATTR_S1G_CAPABILITY: return "NL80211_ATTR_S1G_CAPABILITY";
		case NL80211_ATTR_S1G_CAPABILITY_MASK: return "NL80211_ATTR_S1G_CAPABILITY_MASK";

		case NL80211_ATTR_SAE_PWE: return "NL80211_ATTR_SAE_PWE";
		case NL80211_ATTR_RECONNECT_REQUESTED: return "NL80211_ATTR_RECONNECT_REQUESTED";
		case NL80211_ATTR_SAR_SPEC: return "NL80211_ATTR_SAR_SPEC";
		case NL80211_ATTR_DISABLE_HE: return "NL80211_ATTR_DISABLE_HE";
		case NL80211_ATTR_OBSS_COLOR_BITMAP: return "NL80211_ATTR_OBSS_COLOR_BITMAP";
		case NL80211_ATTR_COLOR_CHANGE_COUNT: return "NL80211_ATTR_COLOR_CHANGE_COUNT";
		case NL80211_ATTR_COLOR_CHANGE_COLOR: return "NL80211_ATTR_COLOR_CHANGE_COLOR";
		case NL80211_ATTR_COLOR_CHANGE_ELEMS: return "NL80211_ATTR_COLOR_CHANGE_ELEMS";
#endif

#if LINUX_VERSION_CODE >= KERNEL_VERSION(6, 1, 0)
		case NL80211_ATTR_MBSSID_CONFIG: return "NL80211_ATTR_MBSSID_CONFIG";
		case NL80211_ATTR_MBSSID_ELEMS: return "NL80211_ATTR_MBSSID_ELEMS";
		case NL80211_ATTR_RADAR_BACKGROUND: return "NL80211_ATTR_RADAR_BACKGROUND";
		case NL80211_ATTR_AP_SETTINGS_FLAGS: return "NL80211_ATTR_AP_SETTINGS_FLAGS";
		case NL80211_ATTR_EHT_CAPABILITY: return "NL80211_ATTR_EHT_CAPABILITY";
		case NL80211_ATTR_DISABLE_EHT: return "NL80211_ATTR_DISABLE_EHT";
		case NL80211_ATTR_MLO_LINKS: return "NL80211_ATTR_MLO_LINKS";
		case NL80211_ATTR_MLO_LINK_ID: return "NL80211_ATTR_MLO_LINK_ID";
		case NL80211_ATTR_MLD_ADDR: return "NL80211_ATTR_MLD_ADDR";
		case NL80211_ATTR_MLO_SUPPORT: return "NL80211_ATTR_MLO_SUPPORT";
		case NL80211_ATTR_MAX_NUM_AKM_SUITES: return "NL80211_ATTR_MAX_NUM_AKM_SUITES";
		case NL80211_ATTR_EML_CAPABILITY: return "NL80211_ATTR_EML_CAPABILITY";
		case NL80211_ATTR_MLD_CAPA_AND_OPS: return "NL80211_ATTR_MLD_CAPA_AND_OPS";
		case NL80211_ATTR_TX_HW_TIMESTAMP: return "NL80211_ATTR_TX_HW_TIMESTAMP";
		case NL80211_ATTR_RX_HW_TIMESTAMP: return "NL80211_ATTR_RX_HW_TIMESTAMP";
#endif

#if LINUX_VERSION_CODE >= KERNEL_VERSION(6, 5, 0)
		case NL80211_ATTR_TD_BITMAP: return "NL80211_ATTR_TD_BITMAP";
		case NL80211_ATTR_PUNCT_BITMAP: return "NL80211_ATTR_PUNCT_BITMAP";
		case NL80211_ATTR_MAX_HW_TIMESTAMP_PEERS: return "NL80211_ATTR_MAX_HW_TIMESTAMP_PEERS";
		case NL80211_ATTR_HW_TIMESTAMP_ENABLED: return "NL80211_ATTR_HW_TIMESTAMP_ENABLED";
		case NL80211_ATTR_EMA_RNR_ELEMS: return "NL80211_ATTR_EMA_RNR_ELEMS";
		case NL80211_ATTR_MLO_LINK_DISABLED: return "NL80211_ATTR_MLO_LINK_DISABLED";
#endif

#if LINUX_VERSION_CODE >= KERNEL_VERSION(6, 9, 0)
		case NL80211_ATTR_BSS_DUMP_INCLUDE_USE_DATA: return "NL80211_ATTR_BSS_DUMP_INCLUDE_USE_DATA";
		case NL80211_ATTR_MLO_TTLM_DLINK: return "NL80211_ATTR_MLO_TTLM_DLINK";
		case NL80211_ATTR_MLO_TTLM_ULINK: return "NL80211_ATTR_MLO_TTLM_ULINK";
		case NL80211_ATTR_ASSOC_SPP_AMSDU: return "NL80211_ATTR_ASSOC_SPP_AMSDU";
#endif

		case __NL80211_ATTR_AFTER_LAST: return "__NL80211_ATTR_AFTER_LAST";

	}
	return "Unknown";
}
inline std::string_view nl80211_bss_string(nl80211_bss v)
{
	switch(v) {
		case __NL80211_BSS_INVALID: return "__NL80211_BSS_INVALID";
		case NL80211_BSS_BSSID: return "NL80211_BSS_BSSID";
		case NL80211_BSS_FREQUENCY: return "NL80211_BSS_FREQUENCY";
		case NL80211_BSS_TSF: return "NL80211_BSS_TSF";
		case NL80211_BSS_BEACON_INTERVAL: return "NL80211_BSS_BEACON_INTERVAL";
		case NL80211_BSS_CAPABILITY: return "NL80211_BSS_CAPABILITY";
		case NL80211_BSS_INFORMATION_ELEMENTS: return "NL80211_BSS_INFORMATION_ELEMENTS";
		case NL80211_BSS_SIGNAL_MBM: return "NL80211_BSS_SIGNAL_MBM";
		case NL80211_BSS_SIGNAL_UNSPEC: return "NL80211_BSS_SIGNAL_UNSPEC";
		case NL80211_BSS_STATUS: return "NL80211_BSS_STATUS";
		case NL80211_BSS_SEEN_MS_AGO: return "NL80211_BSS_SEEN_MS_AGO";
		case NL80211_BSS_BEACON_IES: return "NL80211_BSS_BEACON_IES";
		case NL80211_BSS_CHAN_WIDTH: return "NL80211_BSS_CHAN_WIDTH";
		case NL80211_BSS_BEACON_TSF: return "NL80211_BSS_BEACON_TSF";
		case NL80211_BSS_PRESP_DATA: return "NL80211_BSS_PRESP_DATA";
		case NL80211_BSS_LAST_SEEN_BOOTTIME: return "NL80211_BSS_LAST_SEEN_BOOTTIME";
		case NL80211_BSS_PAD: return "NL80211_BSS_PAD";
		case NL80211_BSS_PARENT_TSF: return "NL80211_BSS_PARENT_TSF";
		case NL80211_BSS_PARENT_BSSID: return "NL80211_BSS_PARENT_BSSID";
		case NL80211_BSS_CHAIN_SIGNAL: return "NL80211_BSS_CHAIN_SIGNAL";

#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 15, 0)
		case NL80211_BSS_FREQUENCY_OFFSET: return "NL80211_BSS_FREQUENCY_OFFSET";
#endif

#if LINUX_VERSION_CODE >= KERNEL_VERSION(6, 1, 0)
		case NL80211_BSS_MLO_LINK_ID: return "NL80211_BSS_MLO_LINK_ID";
		case NL80211_BSS_MLD_ADDR: return "NL80211_BSS_MLD_ADDR";
#endif

#if LINUX_VERSION_CODE >= KERNEL_VERSION(6, 9, 0)
		case NL80211_BSS_USE_FOR: return "NL80211_BSS_USE_FOR";
		case NL80211_BSS_CANNOT_USE_REASONS: return "NL80211_BSS_CANNOT_USE_REASONS";
#endif

		/* keep last */
		case __NL80211_BSS_AFTER_LAST: return "__NL80211_BSS_AFTER_LAST";
	}
	return "Unknown";
}

inline std::string_view nl80211_command_string(nl80211_commands cmd)
{
	switch (cmd) {
		case NL80211_CMD_UNSPEC: return "NL80211_CMD_UNSPEC";

		case NL80211_CMD_GET_WIPHY: return "NL80211_CMD_GET_WIPHY";		/* can dump */
		case NL80211_CMD_SET_WIPHY: return "NL80211_CMD_SET_WIPHY";
		case NL80211_CMD_NEW_WIPHY: return "NL80211_CMD_NEW_WIPHY";
		case NL80211_CMD_DEL_WIPHY: return "NL80211_CMD_DEL_WIPHY";

		case NL80211_CMD_GET_INTERFACE: return "NL80211_CMD_GET_INTERFACE";	/* can dump */
		case NL80211_CMD_SET_INTERFACE: return "NL80211_CMD_SET_INTERFACE";
		case NL80211_CMD_NEW_INTERFACE: return "NL80211_CMD_NEW_INTERFACE";
		case NL80211_CMD_DEL_INTERFACE: return "NL80211_CMD_DEL_INTERFACE";

		case NL80211_CMD_GET_KEY: return "NL80211_CMD_GET_KEY";
		case NL80211_CMD_SET_KEY: return "NL80211_CMD_SET_KEY";
		case NL80211_CMD_NEW_KEY: return "NL80211_CMD_NEW_KEY";
		case NL80211_CMD_DEL_KEY: return "NL80211_CMD_DEL_KEY";

		case NL80211_CMD_GET_BEACON: return "NL80211_CMD_GET_BEACON";
		case NL80211_CMD_SET_BEACON: return "NL80211_CMD_SET_BEACON";
		case NL80211_CMD_START_AP: return "NL80211_CMD_START_AP";
		case NL80211_CMD_STOP_AP: return "NL80211_CMD_STOP_AP";

		case NL80211_CMD_GET_STATION: return "NL80211_CMD_GET_STATION";
		case NL80211_CMD_SET_STATION: return "NL80211_CMD_SET_STATION";
		case NL80211_CMD_NEW_STATION: return "NL80211_CMD_NEW_STATION";
		case NL80211_CMD_DEL_STATION: return "NL80211_CMD_DEL_STATION";

		case NL80211_CMD_GET_MPATH: return "NL80211_CMD_GET_MPATH";
		case NL80211_CMD_SET_MPATH: return "NL80211_CMD_SET_MPATH";
		case NL80211_CMD_NEW_MPATH: return "NL80211_CMD_NEW_MPATH";
		case NL80211_CMD_DEL_MPATH: return "NL80211_CMD_DEL_MPATH";

		case NL80211_CMD_SET_BSS: return "NL80211_CMD_SET_BSS";

		case NL80211_CMD_SET_REG: return "NL80211_CMD_SET_REG";
		case NL80211_CMD_REQ_SET_REG: return "NL80211_CMD_REQ_SET_REG";

		case NL80211_CMD_GET_MESH_CONFIG: return "NL80211_CMD_GET_MESH_CONFIG";
		case NL80211_CMD_SET_MESH_CONFIG: return "NL80211_CMD_SET_MESH_CONFIG";

		case NL80211_CMD_SET_MGMT_EXTRA_IE /* reserved; not used */: return "NL80211_CMD_SET_MGMT_EXTRA_IE /* reserved; not used */";

		case NL80211_CMD_GET_REG: return "NL80211_CMD_GET_REG";

		case NL80211_CMD_GET_SCAN: return "NL80211_CMD_GET_SCAN";
		case NL80211_CMD_TRIGGER_SCAN: return "NL80211_CMD_TRIGGER_SCAN";
		case NL80211_CMD_NEW_SCAN_RESULTS: return "NL80211_CMD_NEW_SCAN_RESULTS";
		case NL80211_CMD_SCAN_ABORTED: return "NL80211_CMD_SCAN_ABORTED";

		case NL80211_CMD_REG_CHANGE: return "NL80211_CMD_REG_CHANGE";

		case NL80211_CMD_AUTHENTICATE: return "NL80211_CMD_AUTHENTICATE";
		case NL80211_CMD_ASSOCIATE: return "NL80211_CMD_ASSOCIATE";
		case NL80211_CMD_DEAUTHENTICATE: return "NL80211_CMD_DEAUTHENTICATE";
		case NL80211_CMD_DISASSOCIATE: return "NL80211_CMD_DISASSOCIATE";

		case NL80211_CMD_MICHAEL_MIC_FAILURE: return "NL80211_CMD_MICHAEL_MIC_FAILURE";

		case NL80211_CMD_REG_BEACON_HINT: return "NL80211_CMD_REG_BEACON_HINT";

		case NL80211_CMD_JOIN_IBSS: return "NL80211_CMD_JOIN_IBSS";
		case NL80211_CMD_LEAVE_IBSS: return "NL80211_CMD_LEAVE_IBSS";

		case NL80211_CMD_TESTMODE: return "NL80211_CMD_TESTMODE";

		case NL80211_CMD_CONNECT: return "NL80211_CMD_CONNECT";
		case NL80211_CMD_ROAM: return "NL80211_CMD_ROAM";
		case NL80211_CMD_DISCONNECT: return "NL80211_CMD_DISCONNECT";

		case NL80211_CMD_SET_WIPHY_NETNS: return "NL80211_CMD_SET_WIPHY_NETNS";

		case NL80211_CMD_GET_SURVEY: return "NL80211_CMD_GET_SURVEY";
		case NL80211_CMD_NEW_SURVEY_RESULTS: return "NL80211_CMD_NEW_SURVEY_RESULTS";

		case NL80211_CMD_SET_PMKSA: return "NL80211_CMD_SET_PMKSA";
		case NL80211_CMD_DEL_PMKSA: return "NL80211_CMD_DEL_PMKSA";
		case NL80211_CMD_FLUSH_PMKSA: return "NL80211_CMD_FLUSH_PMKSA";

		case NL80211_CMD_REMAIN_ON_CHANNEL: return "NL80211_CMD_REMAIN_ON_CHANNEL";
		case NL80211_CMD_CANCEL_REMAIN_ON_CHANNEL: return "NL80211_CMD_CANCEL_REMAIN_ON_CHANNEL";

		case NL80211_CMD_SET_TX_BITRATE_MASK: return "NL80211_CMD_SET_TX_BITRATE_MASK";

		case NL80211_CMD_REGISTER_FRAME: return "NL80211_CMD_REGISTER_FRAME";
		case NL80211_CMD_FRAME: return "NL80211_CMD_FRAME";
		case NL80211_CMD_FRAME_TX_STATUS: return "NL80211_CMD_FRAME_TX_STATUS";

		case NL80211_CMD_SET_POWER_SAVE: return "NL80211_CMD_SET_POWER_SAVE";
		case NL80211_CMD_GET_POWER_SAVE: return "NL80211_CMD_GET_POWER_SAVE";

		case NL80211_CMD_SET_CQM: return "NL80211_CMD_SET_CQM";
		case NL80211_CMD_NOTIFY_CQM: return "NL80211_CMD_NOTIFY_CQM";

		case NL80211_CMD_SET_CHANNEL: return "NL80211_CMD_SET_CHANNEL";
		case NL80211_CMD_SET_WDS_PEER: return "NL80211_CMD_SET_WDS_PEER";

		case NL80211_CMD_FRAME_WAIT_CANCEL: return "NL80211_CMD_FRAME_WAIT_CANCEL";

		case NL80211_CMD_JOIN_MESH: return "NL80211_CMD_JOIN_MESH";
		case NL80211_CMD_LEAVE_MESH: return "NL80211_CMD_LEAVE_MESH";

		case NL80211_CMD_UNPROT_DEAUTHENTICATE: return "NL80211_CMD_UNPROT_DEAUTHENTICATE";
		case NL80211_CMD_UNPROT_DISASSOCIATE: return "NL80211_CMD_UNPROT_DISASSOCIATE";

		case NL80211_CMD_NEW_PEER_CANDIDATE: return "NL80211_CMD_NEW_PEER_CANDIDATE";

		case NL80211_CMD_GET_WOWLAN: return "NL80211_CMD_GET_WOWLAN";
		case NL80211_CMD_SET_WOWLAN: return "NL80211_CMD_SET_WOWLAN";

		case NL80211_CMD_START_SCHED_SCAN: return "NL80211_CMD_START_SCHED_SCAN";
		case NL80211_CMD_STOP_SCHED_SCAN: return "NL80211_CMD_STOP_SCHED_SCAN";
		case NL80211_CMD_SCHED_SCAN_RESULTS: return "NL80211_CMD_SCHED_SCAN_RESULTS";
		case NL80211_CMD_SCHED_SCAN_STOPPED: return "NL80211_CMD_SCHED_SCAN_STOPPED";

		case NL80211_CMD_SET_REKEY_OFFLOAD: return "NL80211_CMD_SET_REKEY_OFFLOAD";

		case NL80211_CMD_PMKSA_CANDIDATE: return "NL80211_CMD_PMKSA_CANDIDATE";

		case NL80211_CMD_TDLS_OPER: return "NL80211_CMD_TDLS_OPER";
		case NL80211_CMD_TDLS_MGMT: return "NL80211_CMD_TDLS_MGMT";

		case NL80211_CMD_UNEXPECTED_FRAME: return "NL80211_CMD_UNEXPECTED_FRAME";

		case NL80211_CMD_PROBE_CLIENT: return "NL80211_CMD_PROBE_CLIENT";

		case NL80211_CMD_REGISTER_BEACONS: return "NL80211_CMD_REGISTER_BEACONS";

		case NL80211_CMD_UNEXPECTED_4ADDR_FRAME: return "NL80211_CMD_UNEXPECTED_4ADDR_FRAME";

		case NL80211_CMD_SET_NOACK_MAP: return "NL80211_CMD_SET_NOACK_MAP";

		case NL80211_CMD_CH_SWITCH_NOTIFY: return "NL80211_CMD_CH_SWITCH_NOTIFY";

		case NL80211_CMD_START_P2P_DEVICE: return "NL80211_CMD_START_P2P_DEVICE";
		case NL80211_CMD_STOP_P2P_DEVICE: return "NL80211_CMD_STOP_P2P_DEVICE";

		case NL80211_CMD_CONN_FAILED: return "NL80211_CMD_CONN_FAILED";

		case NL80211_CMD_SET_MCAST_RATE: return "NL80211_CMD_SET_MCAST_RATE";

		case NL80211_CMD_SET_MAC_ACL: return "NL80211_CMD_SET_MAC_ACL";

		case NL80211_CMD_RADAR_DETECT: return "NL80211_CMD_RADAR_DETECT";

		case NL80211_CMD_GET_PROTOCOL_FEATURES: return "NL80211_CMD_GET_PROTOCOL_FEATURES";

		case NL80211_CMD_UPDATE_FT_IES: return "NL80211_CMD_UPDATE_FT_IES";
		case NL80211_CMD_FT_EVENT: return "NL80211_CMD_FT_EVENT";

		case NL80211_CMD_CRIT_PROTOCOL_START: return "NL80211_CMD_CRIT_PROTOCOL_START";
		case NL80211_CMD_CRIT_PROTOCOL_STOP: return "NL80211_CMD_CRIT_PROTOCOL_STOP";

		case NL80211_CMD_GET_COALESCE: return "NL80211_CMD_GET_COALESCE";
		case NL80211_CMD_SET_COALESCE: return "NL80211_CMD_SET_COALESCE";

		case NL80211_CMD_CHANNEL_SWITCH: return "NL80211_CMD_CHANNEL_SWITCH";

		case NL80211_CMD_VENDOR: return "NL80211_CMD_VENDOR";

		case NL80211_CMD_SET_QOS_MAP: return "NL80211_CMD_SET_QOS_MAP";

		case NL80211_CMD_ADD_TX_TS: return "NL80211_CMD_ADD_TX_TS";
		case NL80211_CMD_DEL_TX_TS: return "NL80211_CMD_DEL_TX_TS";

		case NL80211_CMD_GET_MPP: return "NL80211_CMD_GET_MPP";

		case NL80211_CMD_JOIN_OCB: return "NL80211_CMD_JOIN_OCB";
		case NL80211_CMD_LEAVE_OCB: return "NL80211_CMD_LEAVE_OCB";

		case NL80211_CMD_CH_SWITCH_STARTED_NOTIFY: return "NL80211_CMD_CH_SWITCH_STARTED_NOTIFY";

		case NL80211_CMD_TDLS_CHANNEL_SWITCH: return "NL80211_CMD_TDLS_CHANNEL_SWITCH";
		case NL80211_CMD_TDLS_CANCEL_CHANNEL_SWITCH: return "NL80211_CMD_TDLS_CANCEL_CHANNEL_SWITCH";

		case NL80211_CMD_WIPHY_REG_CHANGE: return "NL80211_CMD_WIPHY_REG_CHANGE";

		case NL80211_CMD_ABORT_SCAN: return "NL80211_CMD_ABORT_SCAN";

		case NL80211_CMD_START_NAN: return "NL80211_CMD_START_NAN";
		case NL80211_CMD_STOP_NAN: return "NL80211_CMD_STOP_NAN";
		case NL80211_CMD_ADD_NAN_FUNCTION: return "NL80211_CMD_ADD_NAN_FUNCTION";
		case NL80211_CMD_DEL_NAN_FUNCTION: return "NL80211_CMD_DEL_NAN_FUNCTION";
		case NL80211_CMD_CHANGE_NAN_CONFIG: return "NL80211_CMD_CHANGE_NAN_CONFIG";
		case NL80211_CMD_NAN_MATCH: return "NL80211_CMD_NAN_MATCH";

		case NL80211_CMD_SET_MULTICAST_TO_UNICAST: return "NL80211_CMD_SET_MULTICAST_TO_UNICAST";

		case NL80211_CMD_UPDATE_CONNECT_PARAMS: return "NL80211_CMD_UPDATE_CONNECT_PARAMS";

		case NL80211_CMD_SET_PMK: return "NL80211_CMD_SET_PMK";
		case NL80211_CMD_DEL_PMK: return "NL80211_CMD_DEL_PMK";

		case NL80211_CMD_PORT_AUTHORIZED: return "NL80211_CMD_PORT_AUTHORIZED";

		case NL80211_CMD_RELOAD_REGDB: return "NL80211_CMD_RELOAD_REGDB";

		case NL80211_CMD_EXTERNAL_AUTH: return "NL80211_CMD_EXTERNAL_AUTH";

		case NL80211_CMD_STA_OPMODE_CHANGED: return "NL80211_CMD_STA_OPMODE_CHANGED";

		case NL80211_CMD_CONTROL_PORT_FRAME: return "NL80211_CMD_CONTROL_PORT_FRAME";

		case NL80211_CMD_GET_FTM_RESPONDER_STATS: return "NL80211_CMD_GET_FTM_RESPONDER_STATS";

		case NL80211_CMD_PEER_MEASUREMENT_START: return "NL80211_CMD_PEER_MEASUREMENT_START";
		case NL80211_CMD_PEER_MEASUREMENT_RESULT: return "NL80211_CMD_PEER_MEASUREMENT_RESULT";
		case NL80211_CMD_PEER_MEASUREMENT_COMPLETE: return "NL80211_CMD_PEER_MEASUREMENT_COMPLETE";

		case NL80211_CMD_NOTIFY_RADAR: return "NL80211_CMD_NOTIFY_RADAR";

		case NL80211_CMD_UPDATE_OWE_INFO: return "NL80211_CMD_UPDATE_OWE_INFO";

		case NL80211_CMD_PROBE_MESH_LINK: return "NL80211_CMD_PROBE_MESH_LINK";

#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 15, 0)
		case NL80211_CMD_SET_TID_CONFIG: return "NL80211_CMD_SET_TID_CONFIG";
		case NL80211_CMD_UNPROT_BEACON: return "NL80211_CMD_UNPROT_BEACON";
		case NL80211_CMD_CONTROL_PORT_FRAME_TX_STATUS: return "NL80211_CMD_CONTROL_PORT_FRAME_TX_STATUS";
		case NL80211_CMD_SET_SAR_SPECS: return "NL80211_CMD_SET_SAR_SPECS";
		case NL80211_CMD_OBSS_COLOR_COLLISION: return "NL80211_CMD_OBSS_COLOR_COLLISION";
		case NL80211_CMD_COLOR_CHANGE_REQUEST: return "NL80211_CMD_COLOR_CHANGE_REQUEST";
		case NL80211_CMD_COLOR_CHANGE_STARTED: return "NL80211_CMD_COLOR_CHANGE_STARTED";
		case NL80211_CMD_COLOR_CHANGE_ABORTED: return "NL80211_CMD_COLOR_CHANGE_ABORTED";
		case NL80211_CMD_COLOR_CHANGE_COMPLETED: return "NL80211_CMD_COLOR_CHANGE_COMPLETED";
#endif

#if LINUX_VERSION_CODE >= KERNEL_VERSION(6, 1, 0)
		case NL80211_CMD_SET_FILS_AAD: return "NL80211_CMD_SET_FILS_AAD";
		case NL80211_CMD_ASSOC_COMEBACK: return "NL80211_CMD_ASSOC_COMEBACK";
		case NL80211_CMD_ADD_LINK: return "NL80211_CMD_ADD_LINK";
		case NL80211_CMD_REMOVE_LINK: return "NL80211_CMD_REMOVE_LINK";
		case NL80211_CMD_ADD_LINK_STA: return "NL80211_CMD_ADD_LINK_STA";
		case NL80211_CMD_MODIFY_LINK_STA: return "NL80211_CMD_MODIFY_LINK_STA";
		case NL80211_CMD_REMOVE_LINK_STA: return "NL80211_CMD_REMOVE_LINK_STA";
#endif

#if LINUX_VERSION_CODE >= KERNEL_VERSION(6, 5, 0)
		case NL80211_CMD_SET_HW_TIMESTAMP: return "NL80211_CMD_SET_HW_TIMESTAMP";
		case NL80211_CMD_LINKS_REMOVED: return "NL80211_CMD_LINKS_REMOVED";
#endif

#if LINUX_VERSION_CODE >= KERNEL_VERSION(6, 9, 0)
		case NL80211_CMD_SET_TID_TO_LINK_MAPPING: return "NL80211_CMD_SET_TID_TO_LINK_MAPPING";
#endif

		/* used to define NL80211_CMD_MAX below */
		case __NL80211_CMD_AFTER_LAST: return "__NL80211_CMD_AFTER_LAST";
	}
	return "Unknown";
}

#endif//_NL80211_ENUMS_H
